name: Code Evaluation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  code-evaluation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run lint, type-check, and dependency scan
        run: npm run lint && npm run type-check && npm run dep-scan

      - name: Generate static analysis report
        run: npm run analysis:static

      - name: Generate PRSS summary
        run: npm run summary:prss

      - name: Generate TASKS checklist
        run: npx tsx scripts/convert-summary-to-tasks.ts

      - name: Fail if critical vulnerabilities present
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const path = require('path');
          const reportsDir = path.join(process.cwd(), 'reports');
          const files = fs.readdirSync(reportsDir).filter(f => /^prss-summary-\d+\.json$/.test(f));
          if (files.length === 0) {
            console.warn('No PRSS summary found. Skipping critical vulnerability check.');
            process.exit(0);
          }
          files.sort();
          const latest = files[files.length - 1];
          const data = JSON.parse(fs.readFileSync(path.join(reportsDir, latest), 'utf8'));
          const critical = data.dependency?.critical ?? 0;
          if (critical > 0) {
            console.error(`CI failed: ${critical} critical dependency vulnerabilities found.`);
            process.exit(1);
          }
          NODE

      - name: Upload reports artifacts
        uses: actions/upload-artifact@v4
        with:
          name: code-evaluation-reports
          path: |
            reports/**
            tasks/TASKS.md 